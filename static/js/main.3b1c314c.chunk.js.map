{"version":3,"sources":["components/Navigation.js","routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Navigation","className","to","About","props","console","log","Movie","year","title","summary","medium_cover_image","genres","pathname","state","src","alt","map","genres_data","index","slice","Home","isLoading","movie_list","getMovieData","a","axios","get","movies","data","setState","this","array_data","id","React","Component","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8RAeeA,MATf,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACA,cAAC,IAAD,CAAMA,GAAI,SAAV,8B,aCQGC,MAff,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKH,UAAU,mBAAf,UACI,sFAIA,8D,gFCiCGM,MAvCf,YAAsE,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,mBAAoBC,EAAU,EAAVA,OACvD,OACI,qBAAKX,UAAU,QAAf,SACI,eAAC,IAAD,CACIC,GAAI,CACAW,SAAU,gBACVC,MAAO,CAAEN,OAAMC,QAAOC,UAASC,qBAAoBC,WAH3D,UAOA,qBAAKG,IAAKJ,EAAoBK,IAAKP,EAAOA,MAAOA,IACjD,sBAAKR,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BQ,IAC/B,oBAAIR,UAAU,cAAd,SAA8BO,IAC9B,oBAAIP,UAAU,gBAAd,SAEQW,EAAOK,KAAI,SAACC,EAAaC,GACrB,OAAO,oBAAIlB,UAAU,mBAAd,SAAiDiB,GAAVC,QAI1D,oBAAGlB,UAAU,iBAAb,UAAgCS,EAAQU,MAAM,EAAG,KAAjD,kBC+CDC,G,kNAnEXP,MAAQ,CACJQ,WAAW,EACXC,WAAY,I,EAGhBC,a,sBAAe,8BAAAC,EAAA,sEAKDC,IAAMC,IAAI,4DALT,gBAGKC,EAHL,EAEPC,KACIA,KAAQD,OAIhB,EAAKE,SAAS,CAACP,WAAYK,EAAQN,WAAW,IAPnC,2C,uDAUf,WACIS,KAAKP,iB,oBAGT,WACI,MAAkCO,KAAKjB,MAA/BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAEnB,OACI,yBAAStB,UAAU,YAAnB,SAEQqB,EACI,qBAAKrB,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,qCAGJ,qBAAKA,UAAU,SAAf,SAEQsB,EAAWN,KAAI,SAAAe,GAAU,OACrB,cAAC,EAAD,CAEIC,GAAKD,EAAWC,GAChBzB,KAAOwB,EAAWxB,KAClBC,MAAQuB,EAAWvB,MACnBC,QAAUsB,EAAWtB,QACrBC,mBAAqBqB,EAAWrB,mBAChCC,OAASoB,EAAWpB,QANdoB,EAAWC,e,GAnCtCC,IAAMC,YCeVC,E,uKAjBX,WACI,MAA8BL,KAAK3B,MAA3BiC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAASvB,OACTwB,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAaN,KAAK3B,MAAlBiC,SACR,OAAIA,EAASvB,MACF,+BAAQuB,EAASvB,MAAML,QAEvB,S,GAbEyB,IAAMC,WCsBZM,MAZf,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAYvB,IACzC,cAAC,IAAD,CAAOqB,KAAK,SAASE,UAAYzC,IACjC,cAAC,IAAD,CAAOuC,KAAK,gBAAgBE,UAAYR,QCZpDS,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.3b1c314c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\"\r\n\r\n// a 태그의 특징은 페이지 전체를 다시 그린다.\r\n// 그래서 react-router-dom의 Link 컴포넌트를 사용한다.\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">홈</Link>\r\n            <Link to={\"/about\"}>정보</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport './About.css'\r\n\r\nfunction About(props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                영화 평가 웹사이트\r\n            </span>\r\n\r\n            <span>\r\n                - 2021.09.07 Kwonputer\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Movie({ year, title, summary, medium_cover_image, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to={{\r\n                    pathname: \"/movie-detail\",\r\n                    state: { year, title, summary, medium_cover_image, genres }\r\n                }}\r\n            >\r\n\r\n            <img src={medium_cover_image} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{ title }</h3>\r\n                <h5 className=\"movie__year\">{ year }</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {\r\n                        genres.map((genres_data, index) => {\r\n                            return <li className=\"movie__genres_li\" key={ index }>{ genres_data }</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n                <p className=\"movie__summary\">{ summary.slice(0, 180) }...</p>\r\n            </div>\r\n\r\n            </Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// 구조체 생성 => 리액트에는 proptypes로 구조체를 만드는 것으로 보임.\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    medium_cover_image: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport './Home.css'\n\nclass Home extends React.Component {\n    state = {\n        isLoading: true,\n        movie_list: [],\n    }\n\n    getMovieData = async () => {\n        const {\n            data: {\n                data: { movies },\n            }\n        } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n\n        this.setState({movie_list: movies, isLoading: false})\n    }\n\n    componentDidMount() {\n        this.getMovieData()\n    }\n\n    render() {\n        const { isLoading, movie_list } = this.state;\n\n        return (\n            <section className=\"container\">\n                {\n                    isLoading ? (\n                        <div className=\"loader\">\n                            <span className=\"loader__text\">로딩중...</span>\n                        </div>\n                    ) : (\n                        <div className=\"movies\">\n                            {\n                                movie_list.map(array_data => (\n                                    <Movie\n                                        key={ array_data.id }\n                                        id={ array_data.id }\n                                        year={ array_data.year }\n                                        title={ array_data.title }\n                                        summary={ array_data.summary }\n                                        medium_cover_image={ array_data.medium_cover_image }\n                                        genres={ array_data.genres }\n                                    />\n                                ))\n                            }\n                        </div>\n                    )\n                }\n            </section>\n\n            // <div>\n            //     { isLoading ? '로딩중...' : movie_list.map((array_data) => {\n            //         // map은 for문처럼 새 객체를 만들고, 배열의 값을 1개씩 읽어오고 출력함.\n            //         return (\n            //             <Movie\n            //                 key={ array_data.id }\n            //                 id={ array_data.id }\n            //                 year={ array_data.year }\n            //                 title={ array_data.title }\n            //                 summary={ array_data.summary }\n            //                 medium_cover_image={ array_data.medium_cover_image }\n            //             />)\n            //     }) }\n            // </div>\n        )\n    }\n}\n\nexport default Home;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props\r\n        if (location.state === undefined) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return <span>{ location.state.title }</span>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport './App.css'\nimport Navigation from \"./components/Navigation\";\n\n// 라우팅\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from './routes/About'\nimport Home from './routes/Home'\nimport Detail from './routes/Detail'\n\n// exact : path가 정확하게 일치할 경우에만 반응하게 만들어줌.\n// component : 어떤 화면을 그릴지 참조.\nfunction App() {\n    return (\n        <HashRouter>\n            <Navigation />\n            <Route path=\"/\" exact={true} component={ Home } />\n            <Route path=\"/about\" component={ About } />\n            <Route path=\"/movie-detail\" component={ Detail } />\n        </HashRouter>\n    )\n}\n\n\nexport default App;\n\n\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n */\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n"],"sourceRoot":""}